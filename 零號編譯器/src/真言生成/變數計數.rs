use crate::剖析::抽象語法樹節點::*;
use std::cmp::max;

fn 區塊區域變數數量(區塊: &Vec<Ｏ句>) -> usize {
    let mut 頂層計數 = 0;
    let mut 塊內計數 = 0;

    for 句 in 區塊 {
        match 句 {
            Ｏ句::變數宣告(_) => {
                頂層計數 += 1;
            }
            Ｏ句::若(若) => 塊內計數 = max(塊內計數, 若區域變數數量(若)),
            _ => {}
        }
    }

    頂層計數 + 塊內計數
}

fn 若區域變數數量(若: &Ｏ若) -> usize {
    let mut 計數 = 區塊區域變數數量(&若.區塊);
    for 或若 in &若.或若列表 {
        計數 = max(計數, 區塊區域變數數量(&或若.區塊))
    }

    match &若.不然 {
        Some(Ｏ不然 { 區塊 }) => 計數 = max(計數, 區塊區域變數數量(&區塊)),
        None => {}
    }
    計數
}

fn 術內區域變數數量(術: &Ｏ術宣告) -> usize {
    區塊區域變數數量(&術.術體)
}
